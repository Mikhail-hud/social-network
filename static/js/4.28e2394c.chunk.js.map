{"version":3,"sources":["component/Profile/ProfileInfo/ProfileInfo.module.scss","assets/profileIcon/github.svg","assets/profileIcon/facebook.svg","assets/profileIcon/vk.svg","assets/profileIcon/mainLink.svg","assets/profileIcon/youtube.svg","assets/profileIcon/instagram.svg","assets/profileIcon/twitter.svg","assets/profileIcon/website.svg","assets/profileIcon/updateLogo.svg","component/Profile/ProfileInfo/ProfileStatus.module.scss","component/Profile/ProfileInfo/ProfileStatus.js","component/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.js","component/Profile/ProfileInfo/ProfileInfo.js","Common/helpers.js","component/Profile/MyPosts/Posts/Posts.js","component/Profile/MyPosts/AddPostForm/PostForm.js","component/Profile/MyPosts/MyPosts.js","component/Profile/ProfilePage.js","component/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","cn","style","status_active","isOwner","type","onChange","e","target","value","autoFocus","defaultValue","onBlur","updateStatus","onDoubleClick","formItemLayout","labelCol","xs","span","sm","wrapperCol","ProfileDataForm","profile","dispatch","useDispatch","error","useSelector","profilePage","console","log","title","width","onClose","visible","bodyStyle","paddingBottom","onFinish","values","saveProfile","then","catch","Object","map","item","notification","open","duration","description","message","icon","InfoCircleOutlined","color","Item","initialValue","fullName","name","label","rules","required","placeholder","aboutMe","TextArea","rows","lookingForAJobDescription","valuePropName","lookingForAJob","entries","contacts","k","i","key","offset","marginRight","htmlType","onClick","ProfileDetails","github","facebook","vk","mainLink","youtube","instagram","twitter","website","profile_data","href","src","alt","ProfileInfo","savePhoto","profile_card","position","top","right","shape","EditOutlined","photos","large","logo","updateLogo","files","length","ProfileStatus","initialValues","openNotification","Posts","massage","likesCount","dislikesCount","deletePost","addLike","id","addDislike","isAuth","action","setAction","actions","LikeFilled","LikeOutlined","DislikeFilled","DislikeOutlined","DeleteOutlined","author","avatar","small","content","datetime","moment","format","fromNow","PostForm","addPost","Text","Typography","useForm","register","handleSubmit","errors","reset","onSubmit","newPost","autoComplete","ref","maxLength","disabled","size","SendOutlined","MyPosts","posts","postsElements","reverse","Profile","withRouter","authorizedUserId","auth","userId","match","params","history","push","getUserProfile","getStatus","newPostText","photo"],"mappings":"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","file":"static/js/4.28e2394c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ant-btn-round\":\"ProfileInfo_ant-btn-round__2quPA\",\"ant-btn\":\"ProfileInfo_ant-btn__wPPDo\",\"ant-btn-lg\":\"ProfileInfo_ant-btn-lg__2yRhX\",\"ant-comment-avatar\":\"ProfileInfo_ant-comment-avatar__2ZCMu\",\"ant-btn-dashed\":\"ProfileInfo_ant-btn-dashed__sQx30\",\"ant-list-split\":\"ProfileInfo_ant-list-split__3cjZo\",\"ant-list-item\":\"ProfileInfo_ant-list-item___FoRZ\",\"ant-list-vertical\":\"ProfileInfo_ant-list-vertical__3OF6E\",\"ant-list-item-action\":\"ProfileInfo_ant-list-item-action__1xzNM\",\"ant-list-item-extra\":\"ProfileInfo_ant-list-item-extra__c93JE\",\"ant-list-item-action-split\":\"ProfileInfo_ant-list-item-action-split__2p2oY\",\"ant-layout\":\"ProfileInfo_ant-layout__JEzgG\",\"ant-layout-content\":\"ProfileInfo_ant-layout-content__36m7g\",\"ant-list-item-meta-content\":\"ProfileInfo_ant-list-item-meta-content__1La3P\",\"ant-drawer-title\":\"ProfileInfo_ant-drawer-title__L1w-W\",\"ant-btn-primary\":\"ProfileInfo_ant-btn-primary__1eSYx\",\"thinScrollBar\":\"ProfileInfo_thinScrollBar__2Kzhq\",\"send-message-form\":\"ProfileInfo_send-message-form__1VL7A\",\"profile_card\":\"ProfileInfo_profile_card__2FAl0\",\"profile_data\":\"ProfileInfo_profile_data__3gr5y\"};","module.exports = __webpack_public_path__ + \"static/media/github.549cf7b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.7f4357e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/vk.83bd7ad2.svg\";","module.exports = __webpack_public_path__ + \"static/media/mainLink.2b0eb018.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube.18f3221d.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.fa06bfe9.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.87557f42.svg\";","module.exports = __webpack_public_path__ + \"static/media/website.9e0f713e.svg\";","module.exports = __webpack_public_path__ + \"static/media/updateLogo.8ab220ae.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ant-btn-round\":\"ProfileStatus_ant-btn-round__3Rew2\",\"ant-btn\":\"ProfileStatus_ant-btn__2byL6\",\"ant-btn-lg\":\"ProfileStatus_ant-btn-lg__3faI1\",\"ant-comment-avatar\":\"ProfileStatus_ant-comment-avatar__3Fo1U\",\"ant-btn-dashed\":\"ProfileStatus_ant-btn-dashed__GdkDl\",\"ant-list-split\":\"ProfileStatus_ant-list-split__1zrCw\",\"ant-list-item\":\"ProfileStatus_ant-list-item__JPScQ\",\"ant-list-vertical\":\"ProfileStatus_ant-list-vertical__2wXJP\",\"ant-list-item-action\":\"ProfileStatus_ant-list-item-action__1LvZC\",\"ant-list-item-extra\":\"ProfileStatus_ant-list-item-extra__JBE1q\",\"ant-list-item-action-split\":\"ProfileStatus_ant-list-item-action-split__1xtQS\",\"ant-layout\":\"ProfileStatus_ant-layout___ouTM\",\"ant-layout-content\":\"ProfileStatus_ant-layout-content__3x7l9\",\"ant-list-item-meta-content\":\"ProfileStatus_ant-list-item-meta-content__InB9m\",\"ant-drawer-title\":\"ProfileStatus_ant-drawer-title__2eGfp\",\"ant-btn-primary\":\"ProfileStatus_ant-btn-primary__1MiuL\",\"thinScrollBar\":\"ProfileStatus_thinScrollBar__2nJ6w\",\"send-message-form\":\"ProfileStatus_send-message-form__63cYP\",\"status\":\"ProfileStatus_status__2UR8u\",\"status_active\":\"ProfileStatus_status_active__32MQz\"};","import React, { useEffect, useState } from 'react';\r\nimport style from './ProfileStatus.module.scss';\r\nimport cn from 'classnames';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    if (props.isOwner) {\r\n      setEditMode(true);\r\n    }\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={cn(style.status, {[style.status_active]: props.isOwner})}>\r\n      {editMode ? (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            defaultValue={status}\r\n            onBlur={deactivateEditMode}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {status || 'Dubl click to change your status!!!'}\r\n          </span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport { Drawer, Form, Button, Input, Checkbox, notification } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { saveProfile } from '../../../../redux/profile-reducer';\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 14,\r\n    },\r\n  },\r\n};\r\n\r\nconst ProfileDataForm = ({ profile, editMode, setEditMode }) => {\r\n  const dispatch = useDispatch();\r\n  const error = useSelector(({ profilePage }) => profilePage.error);\r\n  if (error) {\r\n    console.log(error);\r\n  }\r\n  const onFinish = (values) => {\r\n    dispatch(saveProfile(values))\r\n      .then(() => {\r\n        setEditMode(false);\r\n      })\r\n      .catch((error) => {\r\n        Object.values(error).map((item) => {\r\n          return notification.open({\r\n            duration: 10,\r\n            description: 'Please check out fields and try again!',\r\n            message: item,\r\n            icon: <InfoCircleOutlined style={{ color: 'red' }} />,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      title=\"Profile Details\"\r\n      width={'70%'}\r\n      onClose={() => setEditMode(false)}\r\n      visible={editMode}\r\n      bodyStyle={{ paddingBottom: '2rem' }}>\r\n      <Form {...formItemLayout} onFinish={onFinish}>\r\n        <Form.Item\r\n          initialValue={profile.fullName}\r\n          name=\"fullName\"\r\n          label=\"Your full name:\"\r\n          rules={[{ required: true, message: 'Please enter your full name.' }]}>\r\n          <Input placeholder=\"Don't forget to write your full name.\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          initialValue={profile.aboutMe}\r\n          name=\"aboutMe\"\r\n          label=\"Describe Yourself\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please describe Yourself.',\r\n            },\r\n          ]}>\r\n          <Input.TextArea rows={2} placeholder=\"How would you describe yourself?\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          initialValue={profile.lookingForAJobDescription}\r\n          name=\"lookingForAJobDescription\"\r\n          label=\"Your skills\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please indicate your skills.',\r\n            },\r\n          ]}>\r\n          <Input.TextArea rows={2} placeholder=\"Please indicate your skills.\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"lookingForAJob\"\r\n          label=\"Looking for a job\"\r\n          valuePropName=\"checked\"\r\n          initialValue={profile.lookingForAJob}>\r\n          <Checkbox />\r\n        </Form.Item>\r\n        {Object.entries(profile.contacts).map(([k, i]) => {\r\n          return (\r\n            <Form.Item name={['contacts', `${k}`]} label={k} initialValue={i} key={k}>\r\n              <Input placeholder=\"Please indicate url to your network\" />\r\n            </Form.Item>\r\n          );\r\n        })}\r\n        <Form.Item wrapperCol={{ ...formItemLayout.labelCol, offset: 8 }}>\r\n          <Button type=\"primary\" style={{ marginRight: '1rem' }} htmlType=\"submit\">\r\n            Save\r\n          </Button>\r\n          <Button onClick={() => setEditMode(false)} type=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default ProfileDataForm;\r\n","import React, { useState } from 'react';\r\nimport { profile_card, profile_data } from './ProfileInfo.module.scss';\r\nimport logo from '../../../assets/logo.png';\r\nimport github from '../../../assets/profileIcon/github.svg';\r\nimport facebook from '../../../assets/profileIcon/facebook.svg';\r\nimport vk from '../../../assets/profileIcon/vk.svg';\r\nimport mainLink from '../../../assets/profileIcon/mainLink.svg';\r\nimport youtube from '../../../assets/profileIcon/youtube.svg';\r\nimport instagram from '../../../assets/profileIcon/instagram.svg';\r\nimport twitter from '../../../assets/profileIcon/twitter.svg';\r\nimport website from '../../../assets/profileIcon/website.svg';\r\nimport updateLogo from '../../../assets/profileIcon/updateLogo.svg';\r\nimport Preloder from '../../../Common/Preloder/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileDataForm from '../ProfileInfo/ProfileDataForm/ProfileDataForm';\r\nimport { Row, Col, Button, Tooltip } from 'antd';\r\nimport { EditOutlined } from '@ant-design/icons';\r\n\r\nconst ProfileInfo = ({ profile, savePhoto, isOwner, status, updateStatus }) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  if (!profile) {\r\n    return <Preloder />;\r\n  }\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className={profile_card}>\r\n        <Col style={{ position: 'absolute', top: '18px', right: '20px' }}>\r\n          {isOwner && (\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"round\"\r\n              icon={<EditOutlined />}\r\n              onClick={() => {\r\n                setEditMode(true);\r\n              }}>\r\n              Edit profile!\r\n            </Button>\r\n          )}\r\n        </Col>\r\n        <Col>\r\n          <img src={profile.photos.large ?? logo} alt=\"avatar\" />\r\n          {isOwner && (\r\n            <Tooltip title=\"Upload your photo!\">\r\n              <label>\r\n                <img src={updateLogo} alt=\"update-logo\"/>\r\n                <input type=\"file\" onChange={onMainPhotoSelected} />\r\n              </label>\r\n            </Tooltip>\r\n          )}\r\n        </Col>\r\n        <Col>\r\n          <ProfileStatus status={status} updateStatus={updateStatus} isOwner={isOwner} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <ProfileDataForm\r\n          initialValues={profile}\r\n          editMode={editMode}\r\n          setEditMode={setEditMode}\r\n          profile={profile}\r\n        />\r\n        <ProfileDetails profile={profile} isOwner={isOwner} />\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ProfileDetails = ({ profile }) => {\r\n  const { fullName, aboutMe, lookingForAJob, lookingForAJobDescription, contacts } = profile;\r\n  const icon = {\r\n    github,\r\n    facebook,\r\n    vk,\r\n    mainLink,\r\n    youtube,\r\n    instagram,\r\n    twitter,\r\n    website,\r\n  };\r\n\r\n  return (\r\n    <Col xs={24} className={profile_data}>\r\n      <h2>{fullName}</h2>\r\n      {aboutMe && (\r\n        <p>\r\n          <b>About me:</b> {aboutMe}\r\n        </p>\r\n      )}\r\n      <p>\r\n        <b>Looking for a job:</b> {lookingForAJob ? 'Yes!' : 'No !'}\r\n      </p>\r\n      {lookingForAJob && (\r\n        <p>\r\n          <b>My skills:</b> {lookingForAJobDescription}\r\n        </p>\r\n      )}\r\n      {Object.entries(contacts).map(([key, item]) => {\r\n        if (item)\r\n          return (\r\n            <a href={item} key={key}>\r\n              <img src={icon[key]} alt=\"social-icon\"/>\r\n            </a>\r\n          );\r\n        return null;\r\n      })}\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport { notification } from 'antd';\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\n\r\nexport const openNotification = () => {\r\n  notification.open({\r\n    duration: 10,\r\n    message: 'You are not authorized to perform this action.',\r\n    description: 'For test use email: free@samuraijs.com. Password: free',\r\n    icon: <InfoCircleOutlined style={{ color: 'red' }} />,\r\n  });\r\n};\r\n","import React, { useState } from 'react';\r\nimport { openNotification } from '../../../../Common/helpers';\r\nimport { Comment, Tooltip, Avatar } from 'antd';\r\nimport logo from '../../../../assets/logo.png';\r\nimport moment from 'moment';\r\nimport {\r\n  DislikeOutlined,\r\n  LikeOutlined,\r\n  DislikeFilled,\r\n  LikeFilled,\r\n  DeleteOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst Posts = (props) => {\r\n  const {\r\n    massage,\r\n    likesCount,\r\n    dislikesCount,\r\n    deletePost,\r\n    addLike,\r\n    id,\r\n    addDislike,\r\n    profile,\r\n    isAuth,\r\n  } = props;\r\n  const [action, setAction] = useState(null);\r\n\r\n  const onDeletePost = () => {\r\n    if (isAuth) {\r\n      deletePost(id);\r\n    } else {\r\n      openNotification();\r\n    }\r\n  };\r\n\r\n  const like = () => {\r\n    addLike(id);\r\n    setAction('liked');\r\n  };\r\n\r\n  const dislike = () => {\r\n    addDislike(id);\r\n    setAction('disliked');\r\n  };\r\n\r\n  const actions = [\r\n    <Tooltip key=\"comment-basic-like\" title=\"Like\">\r\n      <span onClick={like}>\r\n        {action === 'liked' ? <LikeFilled /> : <LikeOutlined />}\r\n        <span className=\"comment-action\">{likesCount}</span>\r\n      </span>\r\n    </Tooltip>,\r\n    <Tooltip key=\"comment-basic-dislike\" title=\"Dislike\">\r\n      <span onClick={dislike}>\r\n        {action === 'disliked' ? <DislikeFilled /> : <DislikeOutlined />}\r\n        <span className=\"comment-action\">{dislikesCount}</span>\r\n      </span>\r\n    </Tooltip>,\r\n    <span key=\"comment-basic-reply-to\">Reply to</span>,\r\n    <span key=\"comment-basic-reply-to\" onClick={onDeletePost}>\r\n      Delete\r\n      <DeleteOutlined />\r\n    </span>,\r\n  ];\r\n\r\n  return (\r\n    <Comment\r\n      actions={actions}\r\n      author={profile?.fullName}\r\n      avatar={<Avatar src={profile?.photos?.small ?? logo} alt=\"photos.small\" />}\r\n      content={<p>{massage}</p>}\r\n      datetime={\r\n        <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\r\n          <span>{moment().fromNow()}</span>\r\n        </Tooltip>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Row, Col, Typography, Button } from 'antd';\r\nimport { SendOutlined } from '@ant-design/icons';\r\nimport { openNotification } from '../../../../Common/helpers';\r\n\r\nconst PostForm = (props) => {\r\n  const { isAuth, addPost } = props;\r\n  const { Text } = Typography;\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n  const onSubmit = ({ newPost }) => {\r\n    if (isAuth) {\r\n      addPost(newPost);\r\n      reset();\r\n    } else {\r\n      openNotification();\r\n    }\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col xs={24}>\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"send-message-form\" autoComplete=\"off\">\r\n          {errors.newPost?.type === 'maxLength' && (\r\n            <Text type=\"danger\">The character limit for a single message is 100 characters</Text>\r\n          )}\r\n          <textarea rows=\"2\" name=\"newPost\" ref={register({ required: true, maxLength: 100 })} />\r\n          <Button\r\n            disabled={errors.newPost?.type === 'maxLength'}\r\n            htmlType=\"submit\"\r\n            type=\"dashed\"\r\n            shape=\"round\"\r\n            size=\"large\"\r\n            icon={<SendOutlined />}>\r\n            Post\r\n          </Button>\r\n        </form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","import React from 'react';\r\nimport Posts from './Posts/Posts';\r\nimport PostForm from './AddPostForm/PostForm';\r\nimport { Row, Col } from 'antd';\r\n\r\nconst MyPosts = ({ posts, addLike, addPost, deletePost, addDislike, profile, isAuth }) => {\r\n  let postsElements = [...posts]\r\n    .reverse()\r\n    .map((item) => (\r\n      <Posts\r\n        isAuth={isAuth}\r\n        massage={item.message}\r\n        likesCount={item.likesCount}\r\n        dislikesCount={item.dislikesCount}\r\n        key={item.id}\r\n        id={item.id}\r\n        profile={profile}\r\n        addDislike={addDislike}\r\n        addLike={addLike}\r\n        deletePost={deletePost}\r\n      />\r\n    ));\r\n\r\n  return (\r\n    <Row>\r\n      <h2>My posts</h2>\r\n      <Col xs={24}>{postsElements}</Col>\r\n      <Col xs={24}>\r\n        <PostForm addPost={addPost} isAuth={isAuth} />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPosts from './MyPosts/MyPosts';\r\n\r\nconst Profile = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  savePhoto,\r\n  deletePost,\r\n  addLike,\r\n  addPost,\r\n  posts,\r\n  addDislike,\r\n  isAuth,\r\n}) => {\r\n  return (\r\n    <>\r\n      <h1>Profile</h1>\r\n      <ProfileInfo\r\n        isAuth={isAuth}\r\n        profile={profile}\r\n        status={status}\r\n        updateStatus={updateStatus}\r\n        isOwner={isOwner}\r\n        savePhoto={savePhoto}\r\n      />\r\n      <MyPosts\r\n        isAuth={isAuth}\r\n        profile={profile}\r\n        deletePost={deletePost}\r\n        addLike={addLike}\r\n        addPost={addPost}\r\n        posts={posts}\r\n        addDislike={addDislike}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useEffect } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  addPost,\r\n  addLike,\r\n  deletePost,\r\n  addDislike,\r\n} from '../../redux/profile-reducer';\r\nimport Profile from './ProfilePage';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst ProfileContainer = (props) => {\r\n  const dispatch = useDispatch();\r\n  const profile = useSelector(({ profilePage }) => profilePage.profile);\r\n  const status = useSelector(({ profilePage }) => profilePage.status);\r\n  const authorizedUserId = useSelector(({ auth }) => auth.id);\r\n  const posts = useSelector(({ profilePage }) => profilePage.posts);\r\n  const isAuth = useSelector(({ auth }) => auth.isAuth);\r\n\r\n  const onAddPost = (newPostText) => {\r\n    dispatch(addPost(newPostText));\r\n  };\r\n\r\n  const onAddLike = (id) => {\r\n    dispatch(addLike(id));\r\n  };\r\n\r\n  const onAddDislike = (id) => {\r\n    dispatch(addDislike(id));\r\n  };\r\n\r\n  const onDeletePost = (id) => {\r\n    dispatch(deletePost(id));\r\n  };\r\n\r\n  const onSavePhoto = (photo) => {\r\n    dispatch(savePhoto(photo));\r\n  };\r\n\r\n  const onUpdateStatus = (status) => {\r\n    dispatch(updateStatus(status));\r\n  };\r\n\r\n  let userId = props.match.params.userId ?? authorizedUserId ?? props.history.push('/login');\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserProfile(userId));\r\n    dispatch(getStatus(userId));\r\n  }, [dispatch, userId]);\r\n\r\n  return (\r\n    <>\r\n      <Profile\r\n        isAuth={isAuth}\r\n        addDislike={onAddDislike}\r\n        addPost={onAddPost}\r\n        addLike={onAddLike}\r\n        deletePost={onDeletePost}\r\n        profile={profile}\r\n        status={status}\r\n        posts={posts}\r\n        updateStatus={onUpdateStatus}\r\n        isOwner={!props.match.params.userId}\r\n        savePhoto={onSavePhoto}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(ProfileContainer);\r\n\r\n"],"sourceRoot":""}