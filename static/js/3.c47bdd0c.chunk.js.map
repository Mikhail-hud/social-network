{"version":3,"sources":["component/Profile/MyPosts/MyPosts.module.css","component/Profile/ProfileInfo/ProfileInfo.module.css","component/Profile/ProfileInfo/logo-main.png","component/Profile/ProfileInfo/ProfileStatus.module.css","component/Profile/MyPosts/Posts/Posts.module.css","component/Profile/MyPosts/Posts/user.png","component/Profile/ProfileInfo/ProfileStatusWithHooks.js","component/Profile/ProfileInfo/ProfileInfo.js","component/Profile/MyPosts/Posts/Posts.js","component/Profile/MyPosts/AddPostForm/AddPostForm.js","component/Profile/MyPosts/MyPosts.js","component/Profile/MyPosts/MyPostsContainer.js","component/Profile/Profile.js","component/Profile/ProfileContainer.js"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onChange","e","target","value","autoFocus","defaultValue","onBlur","updateStatus","profile_status","onDoubleClick","ProfileInfo","profile","profile_card","profile_card_avatar","src","photos","large","logo_main","alt","isOwner","custom_file_upload","files","length","savePhoto","type","fullName","profile_container","aboutMe","lookingForAJobDescription","contacts","facebook","vk","github","Posts","posts","posts_logo","logo","posts_text","massage","posts_likes","posts_count","likesCount","maxLength","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","myposts_tx","Field","myposts_tx_in","component","Textarea","name","validate","myposts_tx_btn","MyPosts","postsElements","reverse","map","p","message","key","id","myposts","addPost","newPostText","compose","connect","state","profilePage","dispatch","addPostActionCreator","Profile","MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","React","Component","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.c47bdd0c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myposts\":\"MyPosts_myposts__1DCSH\",\"myposts_tx\":\"MyPosts_myposts_tx__2VRlE\",\"myposts_tx_btn\":\"MyPosts_myposts_tx_btn__3psjr\",\"myposts_tx_in\":\"MyPosts_myposts_tx_in__1ByJh\",\"myposts_tx_in_error\":\"MyPosts_myposts_tx_in_error__2-anf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__3VXxi\",\"profile_card\":\"ProfileInfo_profile_card__3IYeR\",\"profile_card_avatar\":\"ProfileInfo_profile_card_avatar__3fnn1\",\"profile_container\":\"ProfileInfo_profile_container__KUcGP\",\"custom_file_upload\":\"ProfileInfo_custom_file_upload__1kz6Y\"};","module.exports = __webpack_public_path__ + \"static/media/logo-main.50953027.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"ProfileStatus_status__JjjQW\",\"profile_status\":\"ProfileStatus_profile_status__142ef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Posts_posts__3SzYf\",\"posts_logo\":\"Posts_posts_logo__2ylsm\",\"posts_text\":\"Posts_posts_text__1ku7w\",\"posts_count\":\"Posts_posts_count__35RCX\",\"posts_likes\":\"Posts_posts_likes__6PTlu\"};","module.exports = __webpack_public_path__ + \"static/media/user.50953027.png\";","import React, { useEffect, useState } from \"react\";\nimport s from \"./ProfileStatus.module.css\";\n\nconst ProfileStatusWithHooks = (props) => {\n \n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect ( ()=> {\n    setStatus(props.status)\n\n  }, [props.status]) \n\n  const activateEditMode = () => {\n    setEditMode(true)\n  }\n\n  const deactivateEditMode = () => {\n    setEditMode(false)\n    props.updateStatus(status);\n  }\n\n  const onStatusChange = (e) => {\n    setStatus(e.target.value)\n  }\n  \n    return (\n      <div className={s.status}>\n        {editMode ? (\n          <div>\n            <input onChange={onStatusChange} autoFocus={true}  defaultValue={status} onBlur={deactivateEditMode} />\n          </div>\n        ) : (\n          <div>\n            <span className={s.profile_status} onDoubleClick={activateEditMode}>{status || 'Dubl click to change your status!!!'}</span>\n          </div>\n        )}\n      </div>\n    );\n}\n\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\nimport s from \"./ProfileInfo.module.css\";\nimport logo_main from \"./logo-main.png\";\nimport Preloder from '../../../Common/Preloder/Preloader'\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = (props) => {\n\n\n  if(!props.profile) {\n    return <Preloder/>\n  }\n\n  const onMainPhotoSelected = (e) => {\n    if (e.target.files.length) {\n      props.savePhoto(e.target.files[0])\n    }\n    \n  }\n  return (\n    <section className={s.profile}>\n      <aside className={s.profile_card}>\n        <div className={s.profile_card_avatar}>\n          <img src={props.profile.photos.large || logo_main } alt='avatar' />\n          {props.isOwner &&\n          <label className={s.custom_file_upload}>\n            <input onChange={onMainPhotoSelected} type=\"file\"/>\n             <i>Click to update photo!!</i> \n          </label>}\n        </div>\n        <h2>{props.profile.fullName}</h2>\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\n        <div className={s.profile_container}>\n          <p>{props.profile.aboutMe}</p>\n          <p>{props.profile.lookingForAJobDescription}</p>\n          <p>{props.profile.contacts.facebook}</p>\n          <p>{props.profile.contacts.vk}</p>\n          <p>{props.profile.contacts.github}</p>\n        </div>\n      </aside>\n    </section>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport s from \"./Posts.module.css\";\nimport logo from \"./user.png\";\n\nconst Posts = (props) => {\n\n  return (\n    <div className={s.posts}>\n      <div className={s.posts_logo}>\n        <img src={logo} alt='user'/>\n      </div>\n      <div className={s.posts_text}>\n        <p>{props.massage}</p>\n          <div className={s.posts_likes}>\n            <i className=\"far fa-heart\">\n              <span className={s.posts_count}>{props.likesCount}</span>\n            </i>\n          </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Posts;\n","import React from \"react\";\r\nimport s from \"../MyPosts.module.css\";\r\nimport {maxLengthCreator} from '../../../../units/validators'\r\nimport {Textarea} from '../../../../Common/FormsControl/FormsControl'\r\nimport {Field, reduxForm } from \"redux-form\";\r\n\r\n\r\nconst maxLength = maxLengthCreator(100)\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n      <form onSubmit={props.handleSubmit}>\r\n        <label className={s.myposts_tx}>\r\n          <Field className={s.myposts_tx_in} component={Textarea} name='newPostText' validate={maxLength}/>\r\n        </label>\r\n        <label>\r\n          <button className={s.myposts_tx_btn}   type=\"submit\" >  Add post </button>\r\n        </label>\r\n      </form>\r\n    );\r\n  };\r\n  \r\nexport default reduxForm (\r\n    {form: 'profileAddNewPostForm'}\r\n  )(AddNewPostForm)","import React from \"react\";\nimport s from \"./MyPosts.module.css\";\nimport Posts from \"./Posts/Posts\";\nimport AddNewPostForm from './AddPostForm/AddPostForm'\n\nconst MyPosts = (props) => {\n  let postsElements = [...props.posts].reverse().map((p) => (\n    <Posts massage={p.message} likesCount={p.likesCount} key={p.id} />\n  ));\n\n  let onAddPost = (value) => {\n    props.addPost(value.newPostText);\n  };\n\n  return (\n    <section className={s.myposts}>\n      <h2>My posts</h2>\n      <AddNewPostForm onSubmit={onAddPost}/>\n      {postsElements}\n    </section>\n  );\n};\n\n\n\nexport default MyPosts;\n","import { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport {\n  addPostActionCreator,\n} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\n\nlet mapStateDispatchToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    },\n  };\n};\n\nexport default compose (\n  connect (mapStateDispatchToProps,mapDispatchToProps),\n)(MyPosts)\n// const MyPostsContainer = connect(\n//   mapStateDispatchToProps,\n//   mapDispatchToProps\n// )(MyPosts);\n\n// export default MyPostsContainer;\n","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n  return (\n    <>\n      <h1>Profile</h1>\n      <ProfileInfo  profile={props.profile} status={props.status} updateStatus={props.updateStatus} isOwner={props.isOwner} savePhoto={props.savePhoto}/>\n      <MyPostsContainer />\n    </>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter} from \"react-router\";\nimport {getUserProfile, getStatus, updateStatus, savePhoto} from \"../../redux/profile-reducer\";\nimport Profile from \"./Profile\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component { \n\n  refreshProfile () {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if(!userId) {\n        this.props.history.push('/login')\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n\n  }\n\n  componentDidMount () {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    if(this.props.match.params.userId !== prevProps.match.params.userId) {\n      this.refreshProfile();\n    }\n    \n  }\n  render() {\n    return (\n      <>\n        <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} isOwner={!this.props.match.params.userId} savePhoto={this.props.savePhoto}/>\n      </>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n   profile: state.profilePage.profile,\n   status: state.profilePage.status,\n   authorizedUserId: state.auth.id,\n   isAuth: state.auth.isAuth\n  } \n };\n\nexport default compose (\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\n  withRouter,\n) (ProfileContainer)\n\n "],"sourceRoot":""}